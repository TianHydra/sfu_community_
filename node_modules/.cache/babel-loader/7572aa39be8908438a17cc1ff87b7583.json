{"ast":null,"code":"var _jsxFileName = \"/Users/aryanarora/Desktop/Courses/CMPT 474/Assignments/PR#1/sfu_community/src/Components/MyPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./MyPost.css\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyPost(props) {\n  _s();\n\n  const [postsData, setPostsData] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState(null);\n  const [newPostBody, setNewPostBody] = useState(null);\n  const [updatingPostId, setUpdatingPostId] = useState(null); //Modal state\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = id => {\n    setUpdatingPostId(id);\n    setShow(true);\n  };\n\n  async function fetchPosts() {\n    try {\n      const res = await axios.get(`${config.api.invokeURL}/posts`);\n      let myPosts = [];\n\n      for (let post of res.data) {\n        if (post.postCreatorUsername === props.authProps.user.username) {\n          myPosts.push(post);\n        }\n      }\n\n      setPostsData(myPosts);\n      console.log(res.data);\n    } catch (err) {\n      console.log(\"error fetching posts: \", err);\n    }\n  }\n\n  async function postPosts() {\n    try {\n      let date = new Date();\n      let id = updatingPostId.toString();\n      const res = await axios.patch(`${config.api.invokeURL}/posts/${id}`, {\n        \"id\": id,\n        \"postCreatorUsername\": props.authProps.user.username,\n        \"postTitle\": newPostTitle,\n        \"postBody\": newPostBody,\n        \"postDateAndTimeCreated\": `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} @ ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n      });\n      console.log(res);\n    } catch (err) {\n      console.log(\"error posting posts: \", err);\n    }\n  }\n\n  async function deletePosts(id) {\n    try {\n      const res = await axios.delete(`${config.api.invokeURL}/posts/${id}`);\n      console.log(res);\n    } catch (err) {\n      console.log(\"error deleting posts: \", err);\n    }\n  }\n\n  useEffect(() => {\n    fetchPosts().then(r => console.log(\"fetched\"));\n  }, []);\n\n  function inputChangeHandler(event) {\n    switch (event.target.name) {\n      case \"title\":\n        setNewPostTitle(event.target.value);\n        break;\n\n      case \"body\":\n        setNewPostBody(event.target.value);\n        break;\n\n      default:\n        console.log(\"input handler waiting for input\");\n    }\n  }\n\n  function handleSubmit() {\n    postPosts().then(r => fetchPosts());\n    handleClose();\n  }\n\n  function handleDelete(id) {\n    deletePosts(id).then(r => fetchPosts());\n    handleClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"add-new-post-btn\",\n      onClick: handleShow,\n      children: \"Add new Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"postTitle\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter Title\",\n              name: \"title\",\n              onChange: inputChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"postBody\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Description\",\n              name: \"body\",\n              onChange: inputChangeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), postsData.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index,\n        className: \"post-container\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '40rem',\n            height: '15rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: post.postTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"by \", post.postCreatorUsername]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: post.postBody\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-created\",\n              children: post.postDateAndTimeCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"edit-post\",\n              onClick: () => handleShow(post.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"delete-post\",\n              onClick: () => handleDelete(post.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPost, \"iaGBM2bXHIqhTFWc39Z3OpJ2ego=\");\n\n_c = MyPost;\nexport default MyPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPost\");","map":{"version":3,"sources":["/Users/aryanarora/Desktop/Courses/CMPT 474/Assignments/PR#1/sfu_community/src/Components/MyPost.js"],"names":["React","useEffect","useState","axios","config","Button","Modal","Form","Card","MyPost","props","postsData","setPostsData","newPostTitle","setNewPostTitle","newPostBody","setNewPostBody","updatingPostId","setUpdatingPostId","show","setShow","handleClose","handleShow","id","fetchPosts","res","get","api","invokeURL","myPosts","post","data","postCreatorUsername","authProps","user","username","push","console","log","err","postPosts","date","Date","toString","patch","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","deletePosts","delete","then","r","inputChangeHandler","event","target","name","value","handleSubmit","handleDelete","map","index","width","height","postTitle","postBody","postDateAndTimeCreated"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport \"./MyPost.css\"\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction MyPost(props) {\n\n    const [postsData, setPostsData] = useState([]);\n    const [newPostTitle, setNewPostTitle] = useState(null);\n    const [newPostBody, setNewPostBody] = useState(null);\n    const [updatingPostId, setUpdatingPostId] = useState(null);\n\n    //Modal state\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = (id) => {\n        setUpdatingPostId(id);\n        setShow(true);\n    }\n\n    async function fetchPosts() {\n        try {\n            const res = await axios.get(`${config.api.invokeURL}/posts`);\n            let myPosts = [];\n            for (let post of res.data){\n                if(post.postCreatorUsername === props.authProps.user.username){\n                    myPosts.push(post);\n                }\n            }\n            setPostsData(myPosts);\n            console.log(res.data)\n        }\n        catch (err) {\n            console.log(\"error fetching posts: \", err)\n        }\n    }\n\n    async function postPosts() {\n        try {\n            let date = new Date();\n            let id = updatingPostId.toString();\n            const res = await axios.patch(`${config.api.invokeURL}/posts/${id}`, {\n                \"id\": id,\n                \"postCreatorUsername\": props.authProps.user.username,\n                \"postTitle\": newPostTitle,\n                \"postBody\": newPostBody,\n                \"postDateAndTimeCreated\": `${date.getFullYear()}-${date.getMonth()}-${date.getDate()} @ ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\n            });\n            console.log(res)\n        }\n        catch (err) {\n            console.log(\"error posting posts: \", err)\n        }\n    }\n\n    async function deletePosts(id) {\n        try {\n            const res = await axios.delete(`${config.api.invokeURL}/posts/${id}`);\n            console.log(res)\n        }\n        catch (err) {\n            console.log(\"error deleting posts: \", err)\n        }\n    }\n\n    useEffect(() => {\n        fetchPosts().then(r => console.log(\"fetched\"));\n    }, [])\n\n    function inputChangeHandler(event) {\n        switch (event.target.name) {\n            case \"title\":\n                setNewPostTitle(event.target.value);\n                break;\n            case \"body\":\n                setNewPostBody(event.target.value);\n                break;\n            default:\n                console.log(\"input handler waiting for input\")\n        }\n    }\n\n    function handleSubmit() {\n        postPosts().then(r => fetchPosts());\n        handleClose();\n    }\n\n    function handleDelete(id) {\n        deletePosts(id).then(r => fetchPosts());\n        handleClose();\n    }\n\n    return (\n        <div className='post-container'>\n            <Button variant=\"primary\" className=\"add-new-post-btn\" onClick={handleShow}>\n                Add new Post\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group controlId=\"postTitle\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" name=\"title\" onChange={inputChangeHandler}/>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"postBody\">\n                            <Form.Label>Body</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Description\" name=\"body\" onChange={inputChangeHandler}/>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Edit\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {postsData.map((post, index) => {\n                return (\n                    <div id={index} className=\"post-container\">\n                        <Card style={{ width: '40rem', height: '15rem' }}>\n                            <Card.Body>\n                                <Card.Title>{post.postTitle}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">by {post.postCreatorUsername}</Card.Subtitle>\n                                <Card.Text>\n                                    {post.postBody}\n                                </Card.Text>\n                                <div className=\"date-created\">\n                                    {post.postDateAndTimeCreated}\n                                </div>\n                                <Button variant=\"primary\" className=\"edit-post\" onClick={() => handleShow(post.id)}>\n                                    Edit\n                                </Button>\n                                <Button variant=\"primary\" className=\"delete-post\" onClick={() => handleDelete(post.id)}>\n                                    Delete\n                                </Button>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default MyPost;"]},"metadata":{},"sourceType":"module"}